name: Swift

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  DANGER:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.4
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1.71.0
      with:
        ruby-version: 2.7
    - name: Install blunder and install deps.
      run: |
        gem install bundler
        bundle install --jobs 4 --retry 3
    - name: Run danger
      run: |
        bundle exec danger
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  SPM:

    runs-on: macOS-latest

    steps:
    - uses: actions/checkout@v2.3.4
    - name: Test
      run: swift test
  
  POD:

    runs-on: macOS-latest

    steps:
    - uses: actions/checkout@v2.3.4
    - name: Lint
      run: pod lib lint
  
  CARTHAGE:

    runs-on: macOS-latest

    steps:
    - uses: maxim-lobanov/setup-xcode@v1.2.3
      with:
        xcode-version: '11.7'
    - uses: actions/checkout@v2.3.4
    - uses: actions/cache@v2.1.6
      id: carthage-cache
      with:
        path: Carthage
        key: carthage-${{ hashFiles('**/Cartfile.resolved') }}
    - name: Checkout
      if: steps.carthage-cache.outputs.cache-hit != 'true'
      run: |
        carthage bootstrap --no-use-binaries --cache-builds
    - name: Build
      run: carthage build --no-skip-current --cache-builds;
    - name: Archive
      run: carthage archive
    - uses: actions/upload-artifact@v2
      with:
        name: SwiftQueue
        path: SwiftQueue.framework.zip

  XCODE:

    runs-on: macOS-latest

    steps:
    - uses: maxim-lobanov/setup-xcode@v1.2.3
      with:
        xcode-version: '11.7'
    - uses: actions/checkout@v2.3.4
    - uses: actions/cache@v2.1.6
      id: carthage-cache
      with:
        path: Carthage
        key: carthage-${{ hashFiles('**/Cartfile.resolved') }}
    - name: Checkout
      if: steps.carthage-cache.outputs.cache-hit != 'true'
      run: |
        carthage bootstrap --no-use-binaries --cache-builds
    - name: Build
      run: xcodebuild -project "SwiftQueue.xcodeproj" -scheme "SwiftQueue macOS" -destination "arch=x86_64" -configuration Debug ONLY_ACTIVE_ARCH=NO ENABLE_TESTABILITY=YES test -enableCodeCoverage YES | xcpretty
    - uses: codecov/codecov-action@v1.5.0
